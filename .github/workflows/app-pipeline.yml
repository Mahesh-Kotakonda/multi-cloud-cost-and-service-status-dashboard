name: App DockerHub Build & Push

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'docker/**'
  pull_request:
    branches:
      - main
    paths:
      - 'app/**'
      - 'docker/**'
  workflow_dispatch:

concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push-dockerhub:
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.actor == 'Mahesh-Kotakonda')
    runs-on: self-hosted
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      IMAGE_REPO: multi-cloud-cost-and-service-status-dashboard-repo
      VERSION: v${{ github.run_number }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      # ===== BACKEND =====
      - name: Build & Push Backend
        run: |
          docker build \
            -t $DOCKERHUB_USERNAME/$IMAGE_REPO:backend-latest \
            -t $DOCKERHUB_USERNAME/$IMAGE_REPO:backend-${VERSION} \
            -f docker/backend/Dockerfile .
          docker push $DOCKERHUB_USERNAME/$IMAGE_REPO:backend-latest
          docker push $DOCKERHUB_USERNAME/$IMAGE_REPO:backend-${VERSION}

      # ===== WORKER =====
      - name: Build & Push Worker
        run: |
          docker build \
            -t $DOCKERHUB_USERNAME/$IMAGE_REPO:worker-latest \
            -t $DOCKERHUB_USERNAME/$IMAGE_REPO:worker-${VERSION} \
            -f docker/worker/Dockerfile .
          docker push $DOCKERHUB_USERNAME/$IMAGE_REPO:worker-latest
          docker push $DOCKERHUB_USERNAME/$IMAGE_REPO:worker-${VERSION}

      # ===== FRONTEND =====
      - name: Build & Push Frontend
        run: |
          docker build \
            -t $DOCKERHUB_USERNAME/$IMAGE_REPO:frontend-latest \
            -t $DOCKERHUB_USERNAME/$IMAGE_REPO:frontend-${VERSION} \
            -f docker/frontend/Dockerfile .
          docker push $DOCKERHUB_USERNAME/$IMAGE_REPO:frontend-latest
          docker push $DOCKERHUB_USERNAME/$IMAGE_REPO:frontend-${VERSION}

  # ===== JOB 2: Deployment Check & Run Worker =====
  deployment-check:
    needs: build-and-push-dockerhub
    runs-on: self-hosted
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      S3_JSON_PATH: s3://multi-cloud-cost-and-service-status-dashboard/infra/multi-cloud-dashboard-outputs.json
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      IMAGE_REPO: multi-cloud-cost-and-service-status-dashboard-repo
      VERSION: v${{ github.run_number }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify JSON exists in S3
        run: |
          echo "Checking JSON file in S3..."
          if ! aws s3 ls "$S3_JSON_PATH" ; then
            echo "JSON file not found in S3. Check with infra team."
          else
            echo "JSON file exists."

      - name: Pull Worker Docker Image
        run: |
          docker pull $DOCKERHUB_USERNAME/$IMAGE_REPO:worker-${VERSION}

      - name: Run Worker Container
        run: |
          docker run --rm \
            -e AWS_REGION=$AWS_REGION \
            -e SSM_PARAM_NAME=myapp_database_credentials \
            -e DB_NAME=appdb \
            -e POLL_INTERVAL_SECONDS=600 \
            $DOCKERHUB_USERNAME/$IMAGE_REPO:worker-${VERSION}


