name: App Deployment

on:
  repository_dispatch:
    types: [trigger-deployment]
  workflow_dispatch:
    inputs:
      components:
        description: "Which components to deploy (all, worker, backend, frontend, or comma-separated list)"
        required: false
        default: "all"
      worker_version:
        description: "Version tag for worker (default: latest)"
        required: false
        default: "latest"
      backend_version:
        description: "Version tag for backend (default: latest)"
        required: false
        default: "latest"
      frontend_version:
        description: "Version tag for frontend (default: latest)"
        required: false
        default: "latest"

concurrency:
  group: app-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ##########################
  # Pre-deploy
  ##########################
  pre-deploy:
    runs-on: self-hosted
    outputs:
      can_deploy: ${{ steps.pre.outputs.can_deploy }}
      components: ${{ steps.pre.outputs.components }}
      worker_version: ${{ steps.pre.outputs.worker_version }}
      backend_version: ${{ steps.pre.outputs.backend_version }}
      frontend_version: ${{ steps.pre.outputs.frontend_version }}
      worker_image: ${{ steps.pre.outputs.worker_image }}
      backend_image: ${{ steps.pre.outputs.backend_image }}
      frontend_image: ${{ steps.pre.outputs.frontend_image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run pre-deploy script
        id: pre
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_ACTOR: ${{ github.actor }}
          INPUT_COMPONENTS: ${{ github.event.inputs.components || '' }}
          INPUT_WORKER_VERSION: ${{ github.event.inputs.worker_version || '' }}
          INPUT_BACKEND_VERSION: ${{ github.event.inputs.backend_version || '' }}
          INPUT_FRONTEND_VERSION: ${{ github.event.inputs.frontend_version || '' }}
          CLIENT_PAYLOAD_WORKER: ${{ github.event.client_payload.worker || '' }}
          CLIENT_PAYLOAD_BACKEND: ${{ github.event.client_payload.backend || '' }}
          CLIENT_PAYLOAD_FRONTEND: ${{ github.event.client_payload.frontend || '' }}
        run: ./deploy/pre_deploy.sh



  deploy_worker:
    needs: [pre-deploy]
    if: needs.pre-deploy.outputs.can_deploy == 'true'
    runs-on: self-hosted
    # environment: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      IMAGE_REPO: multi-cloud-cost-and-service-status-dashboard-repo
      S3_JSON_PATH: s3://multi-cloud-cost-and-service-status-dashboard/infra/multi-cloud-dashboard-outputs.json
      SSM_PARAM_NAME: myapp_database_credentials
      PEM_PATH: ~/ssh-keys/multi-cloud-cost-and-service-status-key.pem
  
    outputs:
      worker_previous_image: ${{ steps.deploy.outputs.worker_previous_image }}
      worker_current_image: ${{ steps.deploy.outputs.worker_current_image }}
      worker_deploy_status: ${{ steps.deploy.outputs.worker_deploy_status }}
      worker_deployed_instance_ids: ${{ steps.deploy.outputs.worker_deployed_instance_ids }}
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
  
      - name: Run worker deployment script
        id: deploy
        run: ./deploy/deploy-worker.sh "${{ needs.pre-deploy.outputs.worker_image }}"

  ##########################
  # Deploy Backend
  ##########################
  deploy_backend:
    needs: [pre-deploy, deploy_worker]
    if: needs.pre-deploy.outputs.can_deploy == 'true'
    runs-on: self-hosted
    # environment: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      IMAGE_REPO: multi-cloud-cost-and-service-status-dashboard-repo
      S3_JSON_PATH: s3://multi-cloud-cost-and-service-status-dashboard/infra/multi-cloud-dashboard-outputs.json
      PEM_PATH: ~/ssh-keys/multi-cloud-cost-and-service-status-key.pem
      WORKER_INSTANCE_IDS: ${{ needs.deploy_worker.outputs.worker_deployed_instance_ids }}
      BACKEND_IMAGE: ${{ needs.pre-deploy.outputs.backend_image }}
      SSM_PARAM_NAME: myapp_database_credentials
    outputs:
      backend_status: ${{ steps.deploy_backend.outputs.backend_status }}
      backend_active_env: ${{ steps.deploy_backend.outputs.backend_active_env }}
      backend_inactive_env: ${{ steps.deploy_backend.outputs.backend_inactive_env }}
      backend_active_tg: ${{ steps.deploy_backend.outputs.backend_active_tg }}
      backend_inactive_tg: ${{ steps.deploy_backend.outputs.backend_inactive_tg }}
      backend_current_image: ${{ steps.deploy_backend.outputs.backend_current_image }}
      backend_deployed_at: ${{ steps.deploy_backend.outputs.backend_deployed_at }}
      backend_deployed_by: ${{ steps.deploy_backend.outputs.backend_deployed_by }}
      backend_instance_ids: ${{ steps.deploy_backend.outputs.backend_instance_ids }}
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Download backend infra outputs
        run: aws s3 cp "$S3_JSON_PATH" backend-outputs.json
  
      - name: Deploy Backend (Blue-Green)
        id: deploy_backend
        run: |
          ./deploy/deploy-backend.sh \
            --outputs-json backend-outputs.json



  ##########################
  # Deploy Frontend
  ##########################
  deploy_frontend:
    needs: [pre-deploy, deploy_worker, deploy_backend]
    if: needs.pre-deploy.outputs.can_deploy == 'true'
    runs-on: self-hosted
    environment: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      IMAGE_REPO: multi-cloud-cost-and-service-status-dashboard-repo
      S3_JSON_PATH: s3://multi-cloud-cost-and-service-status-dashboard/infra/multi-cloud-dashboard-outputs.json
      PEM_PATH: ~/ssh-keys/multi-cloud-cost-and-service-status-key.pem
      WORKER_INSTANCE_IDS: ${{ needs.deploy_worker.outputs.worker_deployed_instance_ids }}
      FRONTEND_IMAGE: ${{ needs.pre-deploy.outputs.frontend_image }}
      FRONTEND_INSTANCE_IDS: ${{ needs.deploy_backend.outputs.backend_instance_ids }} # or your frontend instance list
    outputs:
      frontend_status: ${{ steps.deploy_frontend.outputs.frontend_status }}
      frontend_active_env: ${{ steps.deploy_frontend.outputs.frontend_active_env }}
      frontend_inactive_env: ${{ steps.deploy_frontend.outputs.frontend_inactive_env }}
      frontend_active_tg: ${{ steps.deploy_frontend.outputs.frontend_active_tg }}
      frontend_inactive_tg: ${{ steps.deploy_frontend.outputs.frontend_inactive_tg }}
      frontend_current_image: ${{ steps.deploy_frontend.outputs.frontend_current_image }}
      frontend_previous_image: ${{ steps.deploy_frontend.outputs.frontend_previous_image }}
      frontend_deployed_at: ${{ steps.deploy_frontend.outputs.frontend_deployed_at }}
      frontend_deployed_by: ${{ steps.deploy_frontend.outputs.frontend_deployed_by }}
      frontend_instance_ids: ${{ steps.deploy_frontend.outputs.frontend_instance_ids }}
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Download frontend infra outputs
        run: aws s3 cp "$S3_JSON_PATH" frontend-outputs.json
  
      - name: Deploy Frontend (Blue-Green)
        id: deploy_frontend
        run: |
          ./deploy/deploy-frontend.sh \
            --outputs-json frontend-outputs.json




  ##########################
  # Deploy Metadata
  ##########################
  deploy_metadata:
    needs: [deploy_worker, deploy_backend, deploy_frontend]
    if: needs.pre-check.outputs.can_deploy == 'true'
    runs-on: self-hosted
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      IMAGE_REPO: multi-cloud-cost-and-service-status-dashboard-repo
      DEPLOY_METADATA_S3_BUCKET: multi-cloud-cost-and-service-status-dashboard
      WORKER_INSTANCE_IDS: ${{ needs.deploy_worker.outputs.deployed_instance_ids || '' }}
      BACKEND_INSTANCE_IDS: ${{ needs.deploy_backend.outputs.backend_instance_ids || '' }}
      FRONTEND_INSTANCE_IDS: ${{ needs.deploy_frontend.outputs.frontend_instance_ids || '' }}
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Download infra outputs JSON
        run: |
          S3_JSON_PATH="s3://multi-cloud-cost-and-service-status-dashboard/infra/multi-cloud-dashboard-outputs.json"
          aws s3 cp "$S3_JSON_PATH" infra-outputs.json
          echo "infra_outputs_json=infra-outputs.json" >> $GITHUB_ENV
  
          INSTANCE_IDS=$(jq -r '.ec2_instance_ids | join(",")' infra-outputs.json)
          echo "instance_ids=$INSTANCE_IDS" >> $GITHUB_ENV
  
          LISTENER_ARN=$(jq -r '.alb_listener_arn' infra-outputs.json)
          echo "listener_arn=$LISTENER_ARN" >> $GITHUB_ENV
  
      - name: Print job outputs for debugging
        run: |
          echo "Worker Current Image: ${{ needs.deploy_worker.outputs.worker_current_image }}"
          echo "Worker Previous Image: ${{ needs.deploy_worker.outputs.worker_previous_image }}"
          echo "Worker Status: ${{ needs.deploy_worker.outputs.worker_status }}"
          echo "Worker Instances: ${{ env.WORKER_INSTANCE_IDS }}"
          echo "Backend Current Image: ${{ needs.deploy_backend.outputs.backend_current_image }}"
          echo "Backend Previous Image: ${{ needs.deploy_backend.outputs.backend_previous_image }}"
          echo "Backend Instances: ${{ env.BACKEND_INSTANCE_IDS }}"
          echo "Frontend Current Image: ${{ needs.deploy_frontend.outputs.frontend_current_image }}"
          echo "Frontend Previous Image: ${{ needs.deploy_frontend.outputs.frontend_previous_image }}"
          echo "Frontend Instances: ${{ env.FRONTEND_INSTANCE_IDS }}"
          echo "Instance IDs: ${{ env.instance_ids }}"
          echo "Listener ARN: ${{ env.listener_arn }}"
          echo "Infra Outputs JSON: ${{ env.infra_outputs_json }}"
          echo "DockerHub Username: ${{ env.DOCKERHUB_USERNAME }}"
          echo "AWS Access Key: ${{ env.AWS_ACCESS_KEY_ID }}"
          echo "AWS Region: ${{ env.AWS_REGION }}"
          echo "Image Repo: ${{ env.IMAGE_REPO }}"
          echo "S3 Bucket: ${{ env.DEPLOY_METADATA_S3_BUCKET }}"
          echo "GitHub Actor: ${{ github.actor }}"
  
      - name: Run metadata.py
        run: |
          python3 ./deploy/metadata.py \
            --pem-path ~/ssh-keys/multi-cloud-cost-and-service-status-key.pem \
            --worker-current-image "${{ needs.deploy_worker.outputs.worker_current_image }}" \
            --worker-previous-image "${{ needs.deploy_worker.outputs.worker_previous_image }}" \
            --worker-status "${{ needs.deploy_worker.outputs.worker_status }}" \
            --worker-instance-ids "$WORKER_INSTANCE_IDS" \
            --backend-current-image "${{ needs.deploy_backend.outputs.backend_current_image }}" \
            --backend-previous-image "${{ needs.deploy_backend.outputs.backend_previous_image }}" \
            --backend-instance-ids "$BACKEND_INSTANCE_IDS" \
            --frontend-current-image "${{ needs.deploy_frontend.outputs.frontend_current_image }}" \
            --frontend-previous-image "${{ needs.deploy_frontend.outputs.frontend_previous_image }}" \
            --frontend-instance-ids "$FRONTEND_INSTANCE_IDS" \
            --instance-ids "${{ env.instance_ids }}" \
            --backend-blue-tg "${{ needs.deploy_backend.outputs.backend_blue_tg }}" \
            --backend-green-tg "${{ needs.deploy_backend.outputs.backend_green_tg }}" \
            --backend-active-env "${{ needs.deploy_backend.outputs.backend_active_env }}" \
            --frontend-blue-tg "${{ needs.deploy_frontend.outputs.frontend_blue_tg }}" \
            --frontend-green-tg "${{ needs.deploy_frontend.outputs.frontend_green_tg }}" \
            --frontend-active-env "${{ needs.deploy_frontend.outputs.frontend_active_env }}" \
            --infra-outputs-json "${{ env.infra_outputs_json }}" \
            --dockerhub-username "${{ env.DOCKERHUB_USERNAME }}" \
            --dockerhub-token "${{ env.DOCKERHUB_TOKEN }}" \
            --aws-access-key-id "${{ env.AWS_ACCESS_KEY_ID }}" \
            --aws-secret-access-key "${{ env.AWS_SECRET_ACCESS_KEY }}" \
            --aws-region "${{ env.AWS_REGION }}" \
            --image-repo "${{ env.IMAGE_REPO }}" \
            --listener-arn "${{ env.listener_arn }}" \
            --s3-bucket "${{ env.DEPLOY_METADATA_S3_BUCKET }}" \
            --github-actor "${{ github.actor }}"

